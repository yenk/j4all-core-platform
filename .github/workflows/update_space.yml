name: Streamlit CI/CD

on:
  push:
    branches:
      - main
      - fetch-data
  pull_request:
    branches:
      - main
      - fetch-data

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: |
        echo "🔒 Generating lock file and installing dependencies..."
        poetry lock --no-interaction
        poetry install --no-interaction --no-root

    - name: Generate requirements.txt
      run: |
        source .venv/bin/activate
        pip freeze > requirements.txt

    - name: Validate dependencies
      run: |
        echo "📦 Checking dependencies..."
        source .venv/bin/activate
        python -c "import streamlit, langchain, chromadb, transformers, torch; print('✅ All core dependencies imported successfully')"

    - name: Run tests (if any)
      run: |
        # Add your test commands here when you have tests
        echo "Tests would run here"
        # poetry run pytest

    - name: Lint code
      run: |
        # Add linting commands here
        echo "Linting would run here"
        # poetry run flake8
        # poetry run black --check .

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: |
        echo "🔒 Generating lock file and installing dependencies..."
        poetry lock --no-interaction
        poetry install --no-interaction --no-root

    - name: Generate requirements.txt for Streamlit Cloud
      run: |
        source .venv/bin/activate
        pip freeze > requirements.txt

    - name: Validate Streamlit app
      run: |
        # Check if app.py exists and is valid
        if [ -f "app.py" ]; then
          echo "✅ app.py found"
          source .venv/bin/activate
          python -c "import streamlit; print('✅ Streamlit import successful')"
        else
          echo "⚠️  app.py not found - create this file for Streamlit Cloud deployment"
          exit 0  # Don't fail the build, just warn
        fi

    - name: Deploy to Streamlit Cloud
      run: |
        echo "🚀 Ready for Streamlit Cloud deployment!"
        echo "📋 Next steps:"
        echo "1. Go to https://streamlit.io/cloud"
        echo "2. Connect your GitHub repository"
        echo "3. Set main branch as deployment source"
        echo "4. Set app.py as the main file"
        echo "5. Configure environment variables in Streamlit Cloud dashboard"
        echo ""
        echo "📁 Files ready for deployment:"
        ls -la *.py *.txt *.toml 2>/dev/null || echo "No deployment files found"
