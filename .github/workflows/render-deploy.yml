name: FastAPI Backend - Render Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Render CLI
        run: |
          curl -fsSL https://render.com/cli/install.sh | bash
          export PATH="$HOME/.render/bin:$PATH"

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render services update lumilens-api --from-render-yaml render.yaml

      - name: Verify Render Deployment
        run: |
          echo "üß™ Checking Render deployment status..."
          # Optionally, you can use Render CLI/API to check status or hit health endpoint
          sleep 30
          curl -f https://lumilens-api.onrender.com/health || echo "‚ùå Health endpoint failed"
          curl -f https://lumilens-api.onrender.com/api/v1/health || echo "‚ùå Detailed health endpoint failed"
          echo "‚úÖ Render deployment verification complete"

      - name: Deployment Success Notification
        run: |
          echo "üöÄ FastAPI Backend deployed to Render successfully!"
          echo "1. Verify health endpoint: https://lumilens-api.onrender.com/health"
          echo "2. Check API documentation: https://lumilens-api.onrender.com/api/docs"
          echo "3. Test chat endpoint: https://lumilens-api.onrender.com/api/v1/chat"
          echo "4. Update frontend environment variables with new backend URL"
          echo ""
          echo "üîß Environment variables needed in Render dashboard:"
          echo "- OPENAI_API_KEY (your actual OpenAI API key)"
          echo "- ENVIRONMENT=production"
          echo "- DEBUG=false"
          echo "- SECRET_KEY (generate a secure random string)"
          echo "- ALLOWED_ORIGINS (include your frontend URLs)"
          echo "- CHROMA_PATH=/tmp/chroma_db"
          echo "- DATA_PATH=/tmp/data"
